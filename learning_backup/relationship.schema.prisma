// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  published Boolean @default(false)
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postCategory PostCategory[]
  @@map("posts")
}


//  Create user Table ** 
 model User { 
  id Int @id @default(autoincrement())
  username String @db.VarChar(50) @unique
  email String @db.VarChar(100) @unique
  role userRole 
  profile Profile?
  post Post[]
  @@map("users")
 }


 enum  userRole {
    user
    admin 
 }



//  Profile Table ** 
model Profile { 
  id Int @id @default(autoincrement())
  bio String
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  @@map("profiles")
}


// Post Category Table ** 
model PostCategory {  
  postId Int
  post Post @relation(fields: [postId], references: [id])
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  @@id([postId, categoryId])
  @@map("postcategories")
}

//  Create   category MOdel ** 
model  Category { 
  id Int @id @default(autoincrement())
  name String @db.VarChar(50) 
  postCategory PostCategory[]
  @@map("categories")
}